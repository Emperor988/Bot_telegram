import telebot
import random
import config
from telebot import types

bot = telebot.TeleBot(config.token)

@bot.message_handler(commands=['/start'])
def welcome(message):
    sti = open('static/welcome.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)

    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ üé≤")
    item2 = types.KeyboardButton("–ö–∞–∫ –¥–µ–ª–∞? üòä")

    markup.add(item1, item2)

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–º –∫—Ä–æ–ª–∏–∫–æ–º.".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def lalala(message):
        if message.text == '–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ üé≤':
            bot.send_message(message.chat.id, str(random.randint(0, 100)))

        elif message.text == '/start':
            bot.send_message(message.chat.id,
                                     text="–ü—Ä–∏–≤–µ—Ç–∏–∫, —è –±–æ—Ç-–±—Ä–æ–Ω–∏—Ä–æ–≤—â–∏–∫, –Ω–æ –¥–ª—è —Ç–µ–±—è —è –ø—Ä–æ—Å—Ç–æ –ë—Ä–æ–Ω—è! ü•∞ ‚ù§ ")
            bot.send_message(message.chat.id,
                                     text="–°–µ–π—á–∞—Å —è –Ω–∞—Ö–æ–∂—É—Å—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Ç–µ—Ä–ø–∏ –Ω–µ–º–Ω–æ–≥–æ üòî ")


        elif message.text == '–ü—Ä–∏–≤–µ—Ç üòä':
            bot.send_message(message.chat.id,
                                     text="–ü—Ä–∏–≤–µ—Ç–∏–∫, —è –±–æ—Ç-–±—Ä–æ–Ω–∏—Ä–æ–≤—â–∏–∫, –Ω–æ –¥–ª—è —Ç–µ–±—è —è –ø—Ä–æ—Å—Ç–æ –ë—Ä–æ–Ω—è! ü•∞ ‚ù§ ")
            bot.send_message(message.chat.id,
                                     text="–°–µ–π—á–∞—Å —è –Ω–∞—Ö–æ–∂—É—Å—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Ç–µ—Ä–ø–∏ –Ω–µ–º–Ω–æ–≥–æ üòî ")

        elif message.text == '–ö–∞–∫ –¥–µ–ª–∞? üòä':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')

            markup.add(item1, item2)

            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –∞ —Ç—ã –∫–∞–∫?',reply_markup=markup)

        elif message.text ==  message.text:
             # keyboard
             keybord = types.ReplyKeyboardMarkup(resize_keyboard=True)
             item1 = types.KeyboardButton("–ü—Ä–∏–≤–µ—Ç üòä")
             item2 = types.KeyboardButton("–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ üé≤")
             item3 = types.KeyboardButton("–ö–∞–∫ –¥–µ–ª–∞? üòä")
             item4 = types.KeyboardButton("–ê —á—Ç–æ —Ç—ã —É–º–µ–µ—à—å? ü§î")

             keybord.add(item1, item2, item3, item4)

             bot.send_message(message.chat.id, '2', reply_markup=keybord)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')







@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–Æ—Ö—É—É—É, —ç—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–≠—Ö, –Ω–∞–¥–µ—é—Å—å –≤—Å–µ –Ω–∞–ª–∞–¥–∏—Ç—Å—è üòû')

            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–û—Ç–ª–∏—á–Ω–æ, –∞ —Ç—ã –∫–∞–∫?",
                                 reply_markup=None)

            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                      text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")

            # keyboard
            # keybord = types.ReplyKeyboardMarkup(resize_keyboard=True)
            # item1 = types.KeyboardButton("–ü—Ä–∏–≤–µ—Ç üòä")
            # item2 = types.KeyboardButton("–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ üé≤")
            # item3 = types.KeyboardButton("–ö–∞–∫ –¥–µ–ª–∞? üòä")
            # item4 = types.KeyboardButton("–ê —á—Ç–æ —Ç—ã —É–º–µ–µ—à—å? ü§î")
            #
            # keybord.add(item1, item2, item3, item4)

    except Exception as e:
        print(repr(e))

# RUN
bot.polling(none_stop=True)
