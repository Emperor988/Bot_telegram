import telebot
#import config
from telebot import types

bot = telebot.TeleBot('1076383664:AAH79kaWVgTDE4l3EQi68d7Kel3ZMIFHcW4')

gv_menu = 'X'  # –û—Ç–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—é –±–æ—Ç–∞
menu_view = '' # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–≤–æ–¥–∏–ª–æ—Å—å –ª–∏ –º–µ–Ω—é –∏–ª–∏ –Ω–µ—Ç

gv_step_line = '' # –í–µ—Ç–∫–∞ –±–æ—Ç–∞
gv_step = 0       # –®–∞–≥ –±–æ—Ç–∞

################### –ó–ê–ú–ï–ù–ò–¢–¨ ###########################
### –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–≤–æ–¥–∏–ª—Å—è –ª–∏ —à–∞–≥ –∏–ª–∏ –Ω–µ—Ç ###
########################################################
gv_step_1 = ''
gv_step_2 = ''
gv_step_3 = ''
gv_step_4 = ''
gv_step_5 = ''
gv_step_6 = ''
########################################################

# –í—ã—Ö–æ–¥ –∏–∑ –º–µ–Ω—é –Ω–∞ –ø–µ—Ä–≤—ã —à–∞–≥ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–µ—Ç–∫–∏
def go_step(arg):
    if arg == 'res':
        global gv_step_line
        gv_step_line = 'res'
        next_step(1)

# –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
def next_step(arg):
    global gv_step
    gv_step = arg

# –í—ã–≤–æ–¥ –ø–æ–¥–º–µ–Ω—é –±–ª–∏–∂–∞–π—à–∏—Ö –¥–∞—Ç –≤ –≤–µ—Ç–∫–µ
def button_date(chat_id):
    markup = types.InlineKeyboardMarkup(row_width=2)
    item1 = types.InlineKeyboardButton("15.03.2020", callback_data='date')
    item2 = types.InlineKeyboardButton("16.03.2020", callback_data='date')
    item3 = types.InlineKeyboardButton("17.03.2020", callback_data='date')
    item4 = types.InlineKeyboardButton("18.03.2020", callback_data='date')
    item5 = types.InlineKeyboardButton("19.03.2020", callback_data='date')
    item6 = types.InlineKeyboardButton("21.03.2020", callback_data='date')
    item7 = types.InlineKeyboardButton("22.03.2020", callback_data='date')
    item8 = types.InlineKeyboardButton("23.03.2020", callback_data='date')
    item9 = types.InlineKeyboardButton("24.03.2020", callback_data='date')
    item10 = types.InlineKeyboardButton("25.03.2020", callback_data='date')
    markup.add(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10)

    # –í—ã–≤–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω
    bot.send_message(chat_id, '–í–æ—Ç –±–ª–∏–∂–∞–π—à–∏–µ –¥–∞—Ç—ã:', reply_markup=markup)

# –£—Ö–æ–¥–∏–º –æ–±—Ä–∞—Ç–Ω–æ –≤ –º–µ–Ω—é
def exit_menu(chat_id):

    global gv_menu, menu_view, gv_step_line, gv_step, gv_step_1, gv_step_2, gv_step_3, gv_step_4, gv_step_5, gv_step_6

    gv_menu = 'X'
    menu_view = ''
    gv_step_line = ''
    gv_step = 0  #
    gv_step_1 = ''
    gv_step_2 = ''
    gv_step_3 = ''
    gv_step_4 = ''
    gv_step_5 = ''
    gv_step_6 = ''
    message_menu(chat_id)

#-------------------------------------------------------------#
#---------------------–ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤ –∫–ª–∞—Å—Å-----------------------#
#-------------–ú–µ—Ç–æ–¥—ã –≤—ã–≤–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —ç–∫—Ä–∞–Ω-------------#
#-------------------------------------------------------------#
def message_menu(chat_id):
    global menu_view

    # –ü—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(chat_id,
                     text="–ü—Ä–∏–≤–µ—Ç–∏–∫, —è –±–æ—Ç-–±—Ä–æ–Ω–∏—Ä–æ–≤—â–∏–∫, –Ω–æ –¥–ª—è —Ç–µ–±—è —è –ø—Ä–æ—Å—Ç–æ –ë—Ä–æ–Ω—è! ü•∞ ‚ù§ ")

    # –ü—É–Ω–∫—Ç—ã –º–µ–Ω—é
    keybord = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–≥–æ–≤–∫—É!", )
    keybord.add(item1)
    bot.send_message(chat_id, '–ß–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?', reply_markup=keybord)

    # –°—Ç–∞–≤–∏–º —á—Ç–æ –º–µ–Ω—é —É–∂–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å –∏ –µ–≥–æ –Ω–µ –Ω–∞–¥–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Å–Ω–æ–≤–∞
    menu_view = 'X'

def message_time(chat_id):
    global gv_step_3
    markup = types.InlineKeyboardMarkup(row_width=1)
    item1 = types.InlineKeyboardButton("10:00", callback_data='time')
    item2 = types.InlineKeyboardButton("10:30", callback_data='time')
    item3 = types.InlineKeyboardButton("11:00", callback_data='time')
    item4 = types.InlineKeyboardButton("11:30", callback_data='time')
    item5 = types.InlineKeyboardButton("12:00", callback_data='time')
    item6 = types.InlineKeyboardButton("12:30", callback_data='room')
    markup.add(item1, item2, item3, item4, item5, item6)
    bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', reply_markup=markup)

    keybord = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é")
    keybord.add(item1)
    bot.send_message(chat_id, '–õ–∏–±–æ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç, —Ñ–æ—Ä–º–∞—Ç –ß–ß:–ú–ú', reply_markup=keybord)

    gv_step_3 = 'X'

def message_room(chat_id):
    global gv_step_2

    keybord = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é")
    keybord.add(item1)
    bot.send_message(chat_id, '–û—Ç–ª–∏—á–Ω–æ, –∏–¥—ë–º –¥–∞–ª—å—à–µ', reply_markup=keybord)

    markup = types.InlineKeyboardMarkup(row_width=2)
    item1 = types.InlineKeyboardButton("1", callback_data='room')
    item2 = types.InlineKeyboardButton("2", callback_data='room')
    item3 = types.InlineKeyboardButton("3", callback_data='room')
    item4 = types.InlineKeyboardButton("4", callback_data='room')
    item5 = types.InlineKeyboardButton("5", callback_data='room')
    item6 = types.InlineKeyboardButton("–í–µ—á–µ", callback_data='room')
    markup.add(item1, item2, item3, item4, item5, item6)
    bot.send_message(chat_id, '–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–∫—É:', reply_markup=markup)
    gv_step_2 = 'X'

def message_lasting(chat_id):
    global gv_step_4

    markup = types.InlineKeyboardMarkup(row_width=3)
    item1 = types.InlineKeyboardButton("30 –º–∏–Ω—É—Ç", callback_data='lasting')
    item2 = types.InlineKeyboardButton("1 —á–∞—Å", callback_data='lasting')
    item3 = types.InlineKeyboardButton("1,5 —á–∞—Å–∞", callback_data='lasting')
    markup.add(item1, item2, item3)
    bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Å—Ç—Ä–µ—á–∏:', reply_markup=markup)

    keybord = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é")
    keybord.add(item1)
    bot.send_message(chat_id, '–õ–∏–±–æ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, —Ñ–æ—Ä–º–∞—Ç –ß–ß:–ú–ú', reply_markup=keybord)
    gv_step_4 = 'X'

def message_name(chat_id):
    global gv_step_5

    keybord = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é")
    keybord.add(item1)
    bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏(–¥–æ 40 —Å–∏–º–≤–æ–ª–æ–≤):', reply_markup=keybord)
    gv_step_5 = 'X'


#-------------------------------------------------------------#
@bot.message_handler(content_types=['text'])
def lalala(message):
        # –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
        if gv_menu == 'X':
            if menu_view == '':
                message_menu(message.chat.id)
            # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ—Ç–∫–∏ –ø–æ –∫–æ—Ç–æ—Ä–æ–π –∏–¥—ë–º
            elif message.text == '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–≥–æ–≤–∫—É!':
                go_step('res')

        # –ò–¥—ë–º –ø–æ –≤–µ—Ç–∫–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        if gv_step_line == 'res':

            # --- –í–´–ë–û–† –î–ê–¢–´
            if gv_step == 1:
                global gv_step_1

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–≤–æ–¥–∏–ª—Å—è –ª–∏ –Ω–∞ —ç–∫—Ä–∞–Ω —ç—Ç–æ—Ç —à–∞–≥
                if gv_step_1 != 'X':
                    bot.send_message(message.chat.id,
                                    text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏, –ª–∏–±–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—é")
                    keybord = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item1 = types.KeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ –¥–∞—Ç—ã")
                    item2 = types.KeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é")
                    keybord.add(item1, item2)
                    bot.send_message(message.chat.id, '–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã: –î–î.–ú–ú.–ì–ì–ì–ì', reply_markup=keybord)
                    gv_step_1 = 'X'
                    button_date(message.chat.id)

                # –ï—Å–ª–∏ —à–∞–≥ –≤—ã–≤–æ–¥–∏–ª—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω, —Ç–æ –º—ã —Å–º–æ—Ç—Ä–∏–º —á—Ç–æ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞ —ç—Ç–æ–º —à–∞–≥–µ
                else:
                    if message.text == '–ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë –¥–∞—Ç':
                        button_date(message.chat.id)
                    elif message.text == '–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é':
                        exit_menu(message.chat.id)
                    # else:
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! –ù–ï–û–ë–•–û–î–ò–ú–û –†–ï–ê–õ–ò–ó–û–í–ê–¢–¨ –ü–†–û–í–ï–†–ö–£ –î–ê–¢–´ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                        # bot.send_message(message.chat.id, '–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã: –î–î.–ú–ú.–ì–ì–ì–ì')

            # --- –í–´–ë–û–† –ü–ï–†–ï–ì–û–í–û–†–ö–ò
            if gv_step == 2:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–≤–æ–¥–∏–ª—Å—è –ª–∏ –Ω–∞ —ç–∫—Ä–∞–Ω —ç—Ç–æ—Ç —à–∞–≥
                if gv_step_2 != 'X':
                    message_room(message.chat.id)

                # –ï—Å–ª–∏ —à–∞–≥ –≤—ã–≤–æ–¥–∏–ª—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω, —Ç–æ –º—ã —Å–º–æ—Ç—Ä–∏–º —á—Ç–æ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞ —ç—Ç–æ–º —à–∞–≥–µ
                else:
                    if message.text == '–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é':
                        exit_menu(message.chat.id)
                    else:
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! –ù–ï–û–ë–•–û–î–ò–ú–û –†–ï–ê–õ–ò–ó–û–í–ê–¢–¨ –ü–†–û–í–ï–†–ö–£ –ö–û–ú–ù–ê–¢–´ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                        global gv_room
                        gv_room = message.text
                        next_step(3)

            # --- –í–´–ë–û–† –í–†–ï–ú–Ø
            if gv_step == 3:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–≤–æ–¥–∏–ª—Å—è –ª–∏ –Ω–∞ —ç–∫—Ä–∞–Ω —ç—Ç–æ—Ç —à–∞–≥
                if gv_step_3 != 'X':
                    message_time(message.chat.id)

                 # –ï—Å–ª–∏ —à–∞–≥ –≤—ã–≤–æ–¥–∏–ª—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω, —Ç–æ –º—ã —Å–º–æ—Ç—Ä–∏–º —á—Ç–æ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞ —ç—Ç–æ–º —à–∞–≥–µ
                else:
                    if message.text == '–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é':
                        exit_menu(message.chat.id)

            # --- –í–´–ë–û–† –ü–†–û–î–û–õ–ñ–ò–¢–ï–õ–¨–ù–û–°–¢–ò
            if gv_step == 4:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–≤–æ–¥–∏–ª—Å—è –ª–∏ –Ω–∞ —ç–∫—Ä–∞–Ω —ç—Ç–æ—Ç —à–∞–≥
                if gv_step_4 != 'X':
                    message_lasting(message.chat.id)

                # –ï—Å–ª–∏ —à–∞–≥ –≤—ã–≤–æ–¥–∏–ª—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω, —Ç–æ –º—ã —Å–º–æ—Ç—Ä–∏–º —á—Ç–æ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞ —ç—Ç–æ–º —à–∞–≥–µ
                else:
                    if message.text == '–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é':
                        exit_menu(message.chat.id)

            # --- –ù–ê–ó–í–ê–ù–ò–ï –í–°–¢–†–ï–ß–ò
            if gv_step == 5:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–≤–æ–¥–∏–ª—Å—è –ª–∏ –Ω–∞ —ç–∫—Ä–∞–Ω —ç—Ç–æ—Ç —à–∞–≥
                if gv_step_5 != 'X':
                    message_name(message.chat.id)

                # –ï—Å–ª–∏ —à–∞–≥ –≤—ã–≤–æ–¥–∏–ª—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω, —Ç–æ –º—ã —Å–º–æ—Ç—Ä–∏–º —á—Ç–æ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞ —ç—Ç–æ–º —à–∞–≥–µ
                else:
                    if message.text == '–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é':
                        exit_menu(message.chat.id)
                    else:
                        global gv_name
                        gv_name = message.text
                        next_step(6)

            # --- –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï
            if gv_step == 6:
                markup = types.InlineKeyboardMarkup(row_width=2)
                item1 = types.InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data='yes')
                item2 = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å", callback_data='no')
                markup.add(item1, item2)
                # bot.send_message(message.chat.id, '–î–∞—Ç–∞: + ', reply_markup=markup)
                bot.send_message(message.chat.id, '–î–∞—Ç–∞: ' + gv_date +
                                                  ', –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–∫–∞: ' + gv_room +
                                                  ', –≤—Ä–µ–º—è: ' + gv_time +
                                                  ', –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ' + gv_lasting +
                                                  ', –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏: ' + gv_name
                                 , reply_markup=markup)



        # else:
        #     bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            global gv_step
            global gv_chat_id
            gv_step = 0

            if call.data == 'yes':
                 bot.answer_callback_query(callback_query_id=call.id, show_alert=True,
                                          text="–ü–µ—Ä–µ–≥–æ–≤–æ—Ä–∫–∞ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞!")
                 exit_menu(call.message.chat.id)

            elif call.data == 'no':
                bot.answer_callback_query(callback_query_id=call.id, show_alert=True,
                                          text="–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!")
                exit_menu(call.message.chat.id)

            elif call.data == 'date':
                global gv_date
                gv_date = call.message.text
                next_step(2)
                message_room(call.message.chat.id)

            elif call.data == 'room':
                global gv_room
                gv_room = call.message.text
                next_step(3)
                message_time(call.message.chat.id)

            elif call.data == 'time':
                global gv_time
                gv_time = call.message.text
                next_step(4)
                message_lasting(call.message.chat.id)

            elif call.data == 'lasting':
                global gv_lasting
                gv_lasting = call.message.text
                next_step(5)
                message_name(call.message.chat.id)

            # if call.data == '1':
            #     bot.send_message(call.message.chat.id, '–Æ—Ö—É—É—É, —ç—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ üòä')
            # elif call.data == '2':
            #     bot.send_message(call.message.chat.id, '–≠—Ö, –Ω–∞–¥–µ—é—Å—å –≤—Å–µ –Ω–∞–ª–∞–¥–∏—Ç—Å—è üòû')

            # # remove inline buttons
            # bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–û—Ç–ª–∏—á–Ω–æ, –∞ —Ç—ã –∫–∞–∫?",
            #                      reply_markup=None)

            # show alert
            # bot.answer_callback_query(callback_query_id=call.id, show_alert=True,
            #                           text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!")

    except Exception as e:
        print(repr(e))


# RUN
bot.polling(none_stop=True)
